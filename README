
//Tetris Game
//Runze Zhang
//rxz160630@utdallas.edu
//Test Environment: Mac OS Serria 10.12.6
//                  MacBook Pro (13-inch, 2017, Four Thunderbolt 3 Ports)
//                  IntelliJ IDEA 2017.2.5
//                  java version "1.8.0_144"

o	M – scoring factor (range: 1-10).
o	N – number of rows required for each Level of difficulty (range: 20-50).
o	S – speed factor (range: 0.1-1.0).
•	When any horizontal row of squares R has no hole, i.e. all the squares in R are parts of some shapes with colors, R is removed and all the rows above R move one square down, Lines = Lines + 1; Score = Score + Level x M. 
•	If the number of removed rows in the current Level reaches N, Level = Level + 1, the falling speed FS = FS x (1 + Level  x S).
•	When a new shape has no space to fall, i.e. existing shapes in “Main area” pile up to near the top, the game terminates.
•	If the cursor is inside the falling shape F (in PAUSE mode), F will be changed to one of the shapes different from F and that currently inside “Next shape”, Score = Score - Level  x M. You should use “Point-Inside-Polygon” test algorithm to detect the cursor.
o	Constants M, N, and S are individually adjustable.
o	The width and height of “Main area” can be adjusted (beyond 10 x 20 squares).
o	The size of the square is adjustable (e.g. enlarged for elderly players).
